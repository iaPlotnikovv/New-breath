openapi: 3.0.0
info:
  title: Сервис баннеров
  version: 1.0.0
servers:
- url: /
paths:
  /user_banner:
    get:
      parameters:
      - explode: true
        in: query
        name: tag_id
        required: true
        schema:
          description: Тэг пользователя
          type: integer
        style: form
      - explode: true
        in: query
        name: feature_id
        required: true
        schema:
          description: Идентификатор фичи
          type: integer
        style: form
      - explode: true
        in: query
        name: use_last_revision
        required: false
        schema:
          default: false
          description: Получать актуальную информацию
          type: boolean
        style: form
      - description: Токен пользователя
        explode: false
        in: header
        name: token
        required: false
        schema:
          example: user_token
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                description: JSON-отображение баннера
                example: "{\"title\": \"some_title\", \"text\": \"some_text\", \"\
                  url\": \"some_url\"}"
                type: object
          description: Баннер пользователя
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Некорректные данные
        "401":
          description: Пользователь не авторизован
        "403":
          description: Пользователь не имеет доступа
        "404":
          description: Баннер для не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Внутренняя ошибка сервера
      summary: Получение баннера для пользователя
  /banner:
    get:
      parameters:
      - description: Токен админа
        explode: false
        in: header
        name: token
        required: false
        schema:
          example: admin_token
          type: string
        style: simple
      - explode: true
        in: query
        name: feature_id
        required: false
        schema:
          description: Идентификатор фичи
          type: integer
        style: form
      - explode: true
        in: query
        name: tag_id
        required: false
        schema:
          description: Идентификатор тега
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          description: Лимит
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Оффсет
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/_banner_get_200_response_inner'
                type: array
          description: OK
        "401":
          description: Пользователь не авторизован
        "403":
          description: Пользователь не имеет доступа
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Внутренняя ошибка сервера
      summary: Получение всех баннеров c фильтрацией по фиче и/или тегу
    post:
      parameters:
      - description: Токен админа
        explode: false
        in: header
        name: token
        required: false
        schema:
          example: admin_token
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_banner_post_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_banner_post_201_response'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Некорректные данные
        "401":
          description: Пользователь не авторизован
        "403":
          description: Пользователь не имеет доступа
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Внутренняя ошибка сервера
      summary: Создание нового баннера
  /banner/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: Идентификатор баннера
          type: integer
        style: simple
      - description: Токен админа
        explode: false
        in: header
        name: token
        required: false
        schema:
          example: admin_token
          type: string
        style: simple
      responses:
        "204":
          description: Баннер успешно удален
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Некорректные данные
        "401":
          description: Пользователь не авторизован
        "403":
          description: Пользователь не имеет доступа
        "404":
          description: Баннер для тэга не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Внутренняя ошибка сервера
      summary: Удаление баннера по идентификатору
    patch:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          description: Идентификатор баннера
          type: integer
        style: simple
      - description: Токен админа
        explode: false
        in: header
        name: token
        required: false
        schema:
          example: admin_token
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_banner__id__patch_request'
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Некорректные данные
        "401":
          description: Пользователь не авторизован
        "403":
          description: Пользователь не имеет доступа
        "404":
          description: Баннер не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_user_banner_get_400_response'
          description: Внутренняя ошибка сервера
      summary: Обновление содержимого баннера
components:
  schemas:
    _banner_post_201_response:
      example:
        banner_id: 0
      properties:
        banner_id:
          description: Идентификатор созданного баннера
          type: integer
      type: object
    _banner_get_200_response_inner:
      example:
        feature_id: 1
        tag_ids:
        - 6
        - 6
        is_active: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        banner_id: 0
        created_at: 2000-01-23T04:56:07.000+00:00
        content: "{\"title\": \"some_title\", \"text\": \"some_text\", \"url\": \"\
          some_url\"}"
      properties:
        banner_id:
          description: Идентификатор баннера
          type: integer
        tag_ids:
          description: Идентификаторы тэгов
          items:
            type: integer
          type: array
        feature_id:
          description: Идентификатор фичи
          type: integer
        content:
          additionalProperties: true
          description: Содержимое баннера
          example: "{\"title\": \"some_title\", \"text\": \"some_text\", \"url\":\
            \ \"some_url\"}"
          type: object
        is_active:
          description: Флаг активности баннера
          type: boolean
        created_at:
          description: Дата создания баннера
          format: date-time
          type: string
        updated_at:
          description: Дата обновления баннера
          format: date-time
          type: string
      type: object
    _user_banner_get_400_response:
      example:
        error: error
      properties:
        error:
          type: string
      type: object
    _banner_post_request:
      properties:
        tag_ids:
          description: Идентификаторы тэгов
          items:
            type: integer
          type: array
        feature_id:
          description: Идентификатор фичи
          type: integer
        content:
          additionalProperties: true
          description: Содержимое баннера
          example: "{\"title\": \"some_title\", \"text\": \"some_text\", \"url\":\
            \ \"some_url\"}"
          type: object
        is_active:
          description: Флаг активности баннера
          type: boolean
      type: object
    _banner__id__patch_request:
      properties:
        tag_ids:
          description: Идентификаторы тэгов
          items:
            type: integer
          nullable: true
          type: array
        feature_id:
          description: Идентификатор фичи
          nullable: true
          type: integer
        content:
          additionalProperties: true
          description: Содержимое баннера
          example: "{\"title\": \"some_title\", \"text\": \"some_text\", \"url\":\
            \ \"some_url\"}"
          nullable: true
          type: object
        is_active:
          description: Флаг активности баннера
          nullable: true
          type: boolean
      type: object
